(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{306:function(t,a,s){"use strict";s.r(a);var n=s(16),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"concurrentmode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concurrentmode"}},[t._v("#")]),t._v(" ConcurrentMode")]),t._v(" "),s("p",[t._v("React16之后发布的概念，在开发的时候我们可以排列渲染的优先级，首先运行优先级更高的任务，减少卡顿。")]),t._v(" "),s("p",[t._v("异步的更新任务\nasync model动画优先级，")]),t._v(" "),s("h2",{attrs:{id:"suspend"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#suspend"}},[t._v("#")]),t._v(" suspend")]),t._v(" "),s("p",[t._v("suspense里面多个组件，都resolve了才能显示出来，")]),t._v(" "),s("h2",{attrs:{id:"react-hook"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-hook"}},[t._v("#")]),t._v(" react Hook")]),t._v(" "),s("p",[t._v("react Hook\n拆分组件逻辑，能更好的复用。")]),t._v(" "),s("h2",{attrs:{id:"react-children"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-children"}},[t._v("#")]),t._v(" React.Children")]),t._v(" "),s("p",[t._v("this.props.children一般直接渲染到jsx里面就可以了，但有时候也会需要操作Children，推荐使用这个api来操作。")]),t._v(" "),s("p",[t._v("this.props 对象的属性与组件的属性一一对应，但是有一个例外，就是 this.props.children 属性。它表示组件的所有子节点。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Children "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  forEach"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  toArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  only"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("源码中Children的定义，和数组类似\nmap和forEach类似，map会返回新数组，forEach返回原数组。")])])}),[],!1,null,null,null);a.default=r.exports}}]);