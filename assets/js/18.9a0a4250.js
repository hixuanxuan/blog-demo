(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{299:function(_,t,a){"use strict";a.r(t);var v=a(16),s=Object(v.a)({},(function(){var _=this,t=_.$createElement,a=_._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("h2",{attrs:{id:"计算机基础题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机基础题"}},[_._v("#")]),_._v(" 计算机基础题")]),_._v(" "),a("h3",{attrs:{id:"_1-arraylist和linklist的区别，优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-arraylist和linklist的区别，优缺点"}},[_._v("#")]),_._v(" 1.ArrayList和LinkList的区别，优缺点")]),_._v(" "),a("p",[_._v("ArrayList底层使用数组实现，默认大小10，容量不足时需动态扩容为原来的1.5倍")]),_._v(" "),a("p",[_._v("LinkedList底层使用双向链表实现，无大小限制")]),_._v(" "),a("h3",{attrs:{id:"_2-进程和线程的差别，协程呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-进程和线程的差别，协程呢"}},[_._v("#")]),_._v(" 2.进程和线程的差别，协程呢")]),_._v(" "),a("h3",{attrs:{id:"_3-tcp，udp区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-tcp，udp区别"}},[_._v("#")]),_._v(" 3.TCP，UDP区别")]),_._v(" "),a("h3",{attrs:{id:"_4-osi七层模型和tcp-ip模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-osi七层模型和tcp-ip模型"}},[_._v("#")]),_._v(" 4.OSI七层模型和tcp/ip模型")]),_._v(" "),a("p",[_._v("计算机网络很重要，底层的ip寻址等都要懂")]),_._v(" "),a("h2",{attrs:{id:"前端基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端基础"}},[_._v("#")]),_._v(" 前端基础")]),_._v(" "),a("h3",{attrs:{id:"_1-web前端应该从哪几个方面优化网站"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-web前端应该从哪几个方面优化网站"}},[_._v("#")]),_._v(" 1.web前端应该从哪几个方面优化网站")]),_._v(" "),a("ol",[a("li",[_._v("页面级别的优化\n"),a("ul",[a("li",[_._v("资源合并")]),_._v(" "),a("li",[_._v("减少请求树木")]),_._v(" "),a("li",[_._v("图片懒加载")]),_._v(" "),a("li",[_._v("图片合并压缩")]),_._v(" "),a("li",[_._v("脚本后置")]),_._v(" "),a("li",[_._v("CSS前置")]),_._v(" "),a("li",[_._v("inline脚本defer")]),_._v(" "),a("li",[_._v("域名配置的时候防止跳转")]),_._v(" "),a("li",[_._v("避免重复打包模块化代码")])])]),_._v(" "),a("li",[_._v("代码级别优化\n"),a("ul",[a("li",[_._v("减少dom操作")]),_._v(" "),a("li",[_._v("css减少Reflow")]),_._v(" "),a("li",[_._v("避免使用eval和Function")]),_._v(" "),a("li",[_._v("减少作用域链的查找")]),_._v(" "),a("li",[_._v("CSS选择符，浏览器的选择符都是从右往左解析的。")])])])]),_._v(" "),a("h3",{attrs:{id:"_2-输入url到页面加载的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-输入url到页面加载的过程"}},[_._v("#")]),_._v(" 2.输入URL到页面加载的过程")]),_._v(" "),a("ol",[a("li",[_._v("DNS域名解析服务器解析域名，查询到目的ip")]),_._v(" "),a("li",[_._v("TCP三次握手，建立起客户端与服务端的连接")]),_._v(" "),a("li",[_._v("客户端向服务端请求发起http请求，请求页面加载所需的信息")]),_._v(" "),a("li",[_._v("服务器返回客户端html，js等文件，渲染页面\n上面是简要回答，如果详细回答，涉及的知识点非常多。")])]),_._v(" "),a("ul",[a("li",[_._v("从浏览器接受url到开启网络请求线程，（展开浏览器的机制以及进程与线程的关系，js是单线程的，但浏览器的v8引擎不是单线程的，他可以开启渲染进程，网络请求线程，脚本加载线程等等）")]),_._v(" "),a("li",[_._v("从服务器接受到请求到对应后台接受到请求，这一点可能涉及负载均衡，安全拦截以及后台内部的处理等等。")]),_._v(" "),a("li",[_._v("单独拎出来的http数据包的解析流程，（解析html的词法生成dom树，解析css生成css规则树，合并成render树，然后layout，painting渲染，复合图层的生成，GPU绘制，外链资源的处理，loaded和document loaded等）")]),_._v(" "),a("li",[_._v("css可视化的模型（元素的渲染规则，如包含块、控制框、BFC、IFC等概念）")]),_._v(" "),a("li",[_._v("js引擎解析的过程")])]),_._v(" "),a("h3",{attrs:{id:"_3-如何在web端实现异步结果的复用，即只产生一次ajax请求并保证所有调用放获取到数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何在web端实现异步结果的复用，即只产生一次ajax请求并保证所有调用放获取到数据"}},[_._v("#")]),_._v(" 3.如何在web端实现异步结果的复用，即只产生一次ajax请求并保证所有调用放获取到数据")]),_._v(" "),a("ol",[a("li",[_._v("缓存一个Promise对象，所有方法注册then函数")]),_._v(" "),a("li",[_._v("localstorage，是否进程安全")]),_._v(" "),a("li",[_._v("如何封装单例模式？？？")])])])}),[],!1,null,null,null);t.default=s.exports}}]);