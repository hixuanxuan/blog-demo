(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{304:function(s,t,n){"use strict";n.r(t);var c=n(16),l=Object(c.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"面试笔试题目之css"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#面试笔试题目之css"}},[s._v("#")]),s._v(" 面试笔试题目之css")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("什么是css预处理器\n答案：\ncss预处理器（Css Processer)为css增加编程的特性，通过编译器将新使用的新语法的文件输出为一个普通css文件，解决css难以复用，代码冗余，可维护性低的问题，对css来说不是锦上添花而是雪中送炭，常用的预处理器有less，sass，Stylus。")])]),s._v(" "),n("li",[n("p",[s._v("CSS预处理器有哪些优缺点？")]),s._v(" "),n("ul",[n("li",[s._v("优点")])]),s._v(" "),n("p",[s._v("（1）用变量存储多次引用的信息，（如颜色值，字体、边距等）只需修改一个地方，就能让所有引用之处都随之改变。\n（2）新语法中的混合（mixin）能够重用一段样式代码，可用混合（mixin）重用一段样式代码，可用混合将自动截取的或列表中小箭头的样式组织在一起，需要这段代码的选择器只需要简单引入即可。\n（3）内置丰富的函数，可处理颜色、字符串、数字和选择器等，也可自定义函数，适应特定需求。\n（4）可像javascript那样使用数学运算（加减乘除等），条件判断和循环，几句代码，就可描述一大段css样式。\n（5）选择器可以嵌套选择器，选择器之间的关系更明显，增强了文件的可读性。\n（6）代码模块化管理，各个导入文件最终被编译生成一个css文件。")]),s._v(" "),n("ul",[n("li",[s._v("缺点：")])]),s._v(" "),n("p",[s._v("（1）通过编译生成的css文件，降低了对css的控制能力，如果书写不当，那编译出的css文件将会巨大而复杂。\n（2）调试难度增加，在浏览器中调试的编译后的css文件\n（3）带来一定的学习成本。")])]),s._v(" "),n("li")])])}),[],!1,null,null,null);t.default=l.exports}}]);